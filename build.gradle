plugins {
    id 'fabric-loom' version '0.2.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


ext {
    buildNum = (System.getenv("BUILD_NUMBER") != null) ? System.getenv("BUILD_NUMBER") : "0"
}

archivesBaseName = project.archives_base_name
version = project.mod_version + "+build." + buildNum
group = project.maven_group

minecraft {
    extractJars = true
	refmapName = 'galacticraft-rewoven.refmap.json'
}

allprojects {
    repositories {
        mavenLocal()
        jcenter() //Cloth
        maven { url "https://www.curseforge.com/api/maven" }
        maven { url "http://server.bbkr.space:8081/artifactory/libs-snapshot" }
        maven { url "https://maven.modmuss50.me" }
        maven { url "https://mod-buildcraft.com/maven" }
        maven { url "https://cdn.hrzn.studio/maven" }
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") { transitive = true }

    // addon api
    modImplementation("com.hrznstudio:GalacticraftAPI:${project.addon_version}+${project.minecraft_version}")

    modImplementation("me.shedaniel.cloth:cloth-events:${project.cloth_version}") { transitive = false }
    modImplementation("me.shedaniel.cloth:config-2:${project.cloth_config_version}") { transitive = false }
    modImplementation("io.github.prospector:modmenu:${project.modmenu_version}")
    modImplementation("io.github.cottonmc:cotton-energy:${project.energy_version}")
    
    modImplementation "alexiil.mc.lib:libblockattributes-core:${project.attributes_version}"
    modImplementation "alexiil.mc.lib:libblockattributes-fluids:${project.attributes_version}"
    modImplementation "alexiil.mc.lib:libblockattributes-items:${project.attributes_version}"

    modImplementation("me.shedaniel:RoughlyEnoughItems:${project.rei_version}") {
        exclude group: 'me.shedaniel.cloth', module: 'config-2'
        exclude group: 'me.shedaniel.cloth', module: 'config-events'
        //need fiber things embedded in REI
    }

    modImplementation("teamreborn:energy:+")
    //modRuntime("TechReborn:TechReborn-${project.minecraft_version}:${project.tech_reborn_version}") //Not necessary - For TR testing purposes only.
    //modRuntime("RebornCore:RebornCore-${project.minecraft_version}:${project.reborn_core_version}")

    //include everything mandatory inside the jar
    include "com.hrznstudio:GalacticraftAPI:${project.addon_version}+${project.minecraft_version}"
    include "me.shedaniel.cloth:cloth-events:${project.cloth_version}"
    include "me.shedaniel.cloth:config-2:${project.cloth_config_version}"
    include "io.github.cottonmc:cotton-energy:${project.energy_version}"
    include "alexiil.mc.lib:libblockattributes-core:${project.attributes_version}"
    include "alexiil.mc.lib:libblockattributes-fluids:${project.attributes_version}"
    include "alexiil.mc.lib:libblockattributes-items:${project.attributes_version}"
    include "teamreborn:energy:+"
	
    // Needed for LBA in order for eclipse to work
    compile "com.google.code.findbugs:jsr305:3.0.2"
    //REI
    modApi "blue.endless:jankson:1.2.0"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

jar {
    from "LICENSE"
    manifest {
        attributes([
                "Implementation-Title"    : project.archives_base_name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : "Horizon Studio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Maven-Artifact"          : "${group}:${archivesBaseName}:${project.version}",
                "ModSide"                 : "BOTH",
        ],)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = 'com.hrznstudio'
            artifactId = 'galacticraft'

            artifact(jar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact(javadocJar)
        }
    }
    repositories {
        maven {
            url "s3://cdn.hrzn.studio/maven"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}
